MrE Regular Expression Simplifier (c) 2020 by Stefan Kahrs & Colin Runciman

The material in this MrE repository is licensed under a Creative Commons
Attribution-NonCommercial-ShareAlike 4.0 International License.  You should
find a copy of the license in the LICENSE file.  If not, see
<http://creativecommons.org/licenses/by-nc-sa/4.0/>.

1. This directory contains mostly Haskell programs and modules implementing
a regular-expression simplifier, and various ways of checking, testing and
measuring it.

2. Building the executables requires a host operating system classed as
"darwin", "linux" or "windows", with the ghc Haskell compiler and libraries
(version 8.6 or later) installed.

3. A Makefile specifies how to build the simplifier and how to obtain test
data and measured test results, filed in subdirectories.  So check that you
have 'make' installed.

4. A 'make' command with no arguments is equivalent to 'make simplifier'.
It compiles the MrE executable, and it also compiles and runs programs to
generate the synactic and semantic catalogues MrE may need.

5. The command 'make testdata' compiles and runs programs to generate in
the 'populations' directory random sample populations of expressions of
given sizes, and in the 'expansions' directory samples of expanded
equivalents of known minimal expressions.  (These files are examples of MrE
inputs.)

6. Without command-line arguments MrE reads each line of the standard input
as a regular expression, and writes a simplified equivalent to standard output.
For greater simplifying power, at the cost of longer simplification times,
try one of the options -p (press), -y (lookup in synactic catalogue) or
-c (lookup in the semantic catalogue).

7. The command 'make correctnesscheck' compiles and runs a program to
check, for a large number of test expressions and for each of the
simplifying transformations, that expressions produced as outputs by are
equivalent to those supplied to it as inputs, and no larger.  The Haskell
testing package 'leancheck' ia required.

8. The command 'make results' builds and runs everything required to
generate results of various measured tests of effectiveness & performance.
After 30 minutes or more it should produce a series of tables in the file
TestResults.pdf.  Tables are generated as latex sources, so check that you
have 'pdflatex' installed.

9. The Haskell sources (*.hs) are lightly commented.  Typically a source
file contains an overall short paragraph of explanation near the top, and
some brief explanatory remarks among the declarations of datatypes and
functions.

10. For a fuller discussion of how the simplifier works, and the results it
gives, see our paper:

  "Simplifying Regular Expressions Further",
  submitted for publication 2020.

Stefan Kahrs, University of Kent (S.M.Kahrs@kent.ac.uk)
Colin Runciman, University of York (Colin.Runciman@york.ac.uk)
